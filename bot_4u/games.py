import json
import random

def games():
    return "üéÆ –°–ø–∏—Å–æ–∫ –∏–≥—Ä:" \
           "\n" \
           "\n&#12288;üé∞ –ö–∞–∑–∏–Ω–æ" \
           "\n&#12288;ü¶Ö –ú–æ–Ω–µ—Ç–∫–∞"

def kaz(id,amount):
    with open('json/' + str(id) + '.json') as f:
        ff = json.loads(f.read())
    try:
        if amount == "–≤—Å–µ" or amount == "–≤—Å—ë":
            amount = ff["balance"]
        if amount == "–ø–æ–ª–æ–≤–∏–Ω–∞":
            amount = int(ff["balance"] / 2)
        if int(amount) <= ff["balance"] and int(amount) > 0:
            r = random.randrange(0,15)
            if r == 0 or r == 1 or r == 2 or r == 3 or r == 4 or r == 5 or r == 6:
                ff["balance"] -= int(amount)
                ff["klose"] += int(round(int(amount)))
                with open('json/' + str(id) + '.json', 'w') as f:
                    f.write(json.dumps(ff, indent=4))
                return "üö´–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ –≤—Å—é —Å—Ç–∞–≤–∫—É!\nüí∞–í–∞—à –±–∞–ª–∞–Ω—Å: " + str(ff["balance"]) + "$"
            elif r == 7 or r == 8 or r == 9 or r == 10:
                win = int(amount)*1.5
                ff["balance"] += int(round(win))
                ff["kwin"] += int(round(win))
                with open('json/' + str(id) + '.json', 'w') as f:
                    f.write(json.dumps(ff, indent=4))
                return "‚úÖ–í—ã –≤—ã–π–≥—Ä–∞–ª–∏: " + str(int(win)) + "$ (1.5x)" + "\nüí∞–í–∞—à –±–∞–ª–∞–Ω—Å: " + str(ff["balance"]) + "$"
            elif r == 11 or r == 12 or r == 13:
                win = int(amount) * 2
                ff["balance"] += int(round(win))
                ff["kwin"] += int(round(win))
                with open('json/' + str(id) + '.json', 'w') as f:
                    f.write(json.dumps(ff, indent=4))
                return "‚úÖ–í—ã –≤—ã–π–≥—Ä–∞–ª–∏: " + str(int(win)) + "$ (2x)" + "\nüí∞–í–∞—à –±–∞–ª–∞–Ω—Å: " + str(ff["balance"]) + "$"
            elif r == 14:
                win = int(amount) * 5
                ff["balance"] += int(round(win))
                ff["kwin"] += int(round(win))
                with open('json/' + str(id) + '.json', 'w') as f:
                    f.write(json.dumps(ff, indent=4))

                return "‚úÖ–í—ã –≤—ã–π–≥—Ä–∞–ª–∏: " + str(int(win)) + "$ (5x)" + "\nüí∞–í–∞—à –±–∞–ª–∞–Ω—Å: " + str(ff["balance"]) + "$"
        else:
            return "–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –∏–ª–∏ —Å—É–º–º–∞ –º–µ–Ω—å—à–µ 0!\n" + bal(id)
    except:
        return "–í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ!"

def monetka(id, side, amount):
    with open('json/' + str(id) + '.json') as f:
        ff = json.loads(f.read())
    if amount == "–≤—Å–µ" or amount == "–≤—Å—ë":
        amount = ff["balance"]
    if int(amount) <= ff["balance"] and int(amount) > 0:
        if side == "–æ—Ä–µ–ª":
            r = random.randrange(0, 2)
            if r == 0:
                ff["balance"] -= int(amount)
                ff["mlose"] += int(amount)
                with open('json/' + str(id) + '.json', 'w') as f:
                    f.write(json.dumps(ff, indent=4))
                return "üö´–í—ã–ø–∞–ª–∞ —Ä–µ—à–∫–∞,–≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!" + "\nüí∞–í–∞—à –±–∞–ª–∞–Ω—Å: " + str(ff["balance"]) + "$"
            elif r == 1:
                win = int(amount) * 3
                ff["balance"] += int(round(win))
                ff["mwin"] += int(round(win))
                with open('json/' + str(id) + '.json', 'w') as f:
                    f.write(json.dumps(ff, indent=4))
            return "‚úÖ–í—ã –≤—ã–π–≥—Ä–∞–ª–∏,–≤—ã–ø–∞–ª –û—Ä–µ–ª: " + str(int(win)) + "$ (3x)" + "\nüí∞–í–∞—à –±–∞–ª–∞–Ω—Å: " + str(ff["balance"]) + "$"
        elif side == "—Ä–µ—à–∫–∞":
            r = random.randrange(0, 2)
            if r == 0:
                ff["balance"] -= int(amount)
                ff["mlose"] += int(amount)
                with open('json/' + str(id) + '.json', 'w') as f:
                    f.write(json.dumps(ff, indent=4))
                return "üö´–í—ã–ø–∞–ª –û—Ä–µ–ª,–≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!" + "\nüí∞–í–∞—à –±–∞–ª–∞–Ω—Å: " + str(ff["balance"]) + "$"
            elif r == 1:
                win = int(amount) * 3
                ff["balance"] += int(round(win))
                ff["mwin"] += int(round(win))
                with open('json/' + str(id) + '.json', 'w') as f:
                    f.write(json.dumps(ff, indent=4))
            return "‚úÖ–í—ã –≤—ã–π–≥—Ä–∞–ª–∏,–≤—ã–ø–∞–ª–∞ –†–µ—à–∫–∞: " + str(int(win)) + "$ (3x)" + "\nüí∞–í–∞—à –±–∞–ª–∞–Ω—Å: " + str(ff["balance"]) + "$"
        return "–£ –º–æ–Ω–µ—Ç–∫–∏ –µ—Å—Ç—å —Ç–æ–ª—å–∫–æ 2 —Å—Ç–æ—Ä–æ–Ω—ã - –û—Ä–µ–ª –∏ –†–µ—à–∫–∞"
    else:
        return "–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –∏–ª–∏ —Å—É–º–º–∞ –º–µ–Ω—å—à–µ 0!\n" + bal(id)

def gstats(id):
    with open('json/' + str(id) + '.json') as f:
        ff = json.loads(f.read())
    twin = ff["kwin"] + ff["mwin"]
    tlose = ff["klose"] + ff["mlose"]
    return "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∏–≥—Ä–∞–º\n\nüé∞ –ö–∞–∑–∏–Ω–æ\n&#12288;üìà –í—Å–µ–≥–æ –≤—ã–∏–≥—Ä–∞–Ω–æ –≤ –∫–∞–∑–∏–Ω–æ: " + str(ff["kwin"]) + "$" + " \n&#12288;üìâ –í—Å–µ–≥–æ –ø—Ä–æ–∏–≥—Ä–∞–Ω–æ –≤ –∫–∞–∑–∏–Ω–æ: " + str(ff["klose"]) + "$" + "\nü¶Ö –ú–æ–Ω–µ—Ç–∫–∞\n&#12288;üìà –í—Å–µ–≥–æ –≤—ã–∏–≥—Ä–∞–Ω–æ –≤ –º–æ–Ω–µ—Ç–∫–µ: " + str(ff["mwin"]) + "$" + " \n&#12288;üìâ –í—Å–µ–≥–æ –ø—Ä–æ–∏–≥—Ä–∞–Ω–æ –≤ –º–æ–Ω–µ—Ç–∫–µ: " + str(ff["mlose"]) + "$" + " \n\nüìà–í—Å–µ–≥–æ –≤—ã–∏–≥—Ä–∞–Ω–æ: " + str(twin) + "$" + " \nüìâ–í—Å–µ–≥–æ –ø—Ä–æ–∏–≥—Ä–∞–Ω–æ: " + str(tlose) + "$"
