import json

def bal(id):
    with open('json/' + str(id) + '.json') as f:
        ff = json.loads(f.read())
    return 'üí∞–í–∞—à –±–∞–ª–∞–Ω—Å: ' + str(ff["balance"]) + "$\nüí¥ –ë–∏—Ç–∫–æ–∏–Ω—ã: " + str(round(ff["btc"],5)) + " ‚Çø"

def btcrateshow():
    return "üìà –ö—É—Ä—Å –±–∏—Ç–∫–æ–∏–Ω–∞ –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç - 1000$ –∑–∞ 1‚Çø"

def btctousd(id, n):
    with open('json/' + str(id) + '.json') as f:
        ff = json.loads(f.read())
    if n == "–≤—Å–µ" or n == "–≤—Å—ë":
        n = round(ff["btc"],5)
    if float(n) <= ff["btc"] and float(n) > 0:
        temp = float(n) * 10000
        ff["btc"] -= float(n)
        ff["balance"] += int(float(n) * 10000)
        with open('json/' + str(id) + '.json', 'w') as f:
            f.write(json.dumps(ff, indent=4))
        return "–í—ã —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–≤–µ–ª–∏ " + str(n) + "‚Çø –≤ " + str(int(temp)) + "$\n" + bal(id)
    return "–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±–∏—Ç–∫–æ–∏–Ω–æ–≤ –∏–ª–∏ –≤—ã –≤–≤–µ–ª–∏ 0\n" + bal(id)

def usdtobtc(id, n):
    with open('json/' + str(id) + '.json') as f:
        ff = json.loads(f.read())
    if n == "–≤—Å–µ" or n == "–≤—Å—ë":
        n = int(ff["balance"] / 10000)
    temp = int(float(n) * 10000)  # –≤ $
    if temp <= ff["balance"] and float(n) > 0:
        ff["btc"] += round(float(n),5)
        ff["balance"] -= temp
        with open('json/' + str(id) + '.json', 'w') as f:
            f.write(json.dumps(ff, indent=4))
        return "–í—ã —É—Å–ø–µ—à–Ω–æ –∫—É–ø–∏–ª–∏ " + str(round(float(n),5)) + "‚Çø –∑–∞ " + str(temp) + "$\n" + str(bal(id))
    else:
        return "–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –∏–ª–∏ –≤—ã –≤–≤–µ–ª–∏ 0\n" + bal(id)