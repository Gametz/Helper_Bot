import json
import random

def hackmenu(id):
    with open('json/' + str(id) + '.json') as f:
        ff = json.loads(f.read())
    return "üìã –¢–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å:" \
           "\n" \
           "\nüîé –£—Ä–æ–≤–µ–Ω—å: " + str(ff["hlevel"]) + \
           "\nüíä –•–ü: " + str(ff["hhp"]) + " (+" + str(ff["php"]) + ")" + \
           "\nüî´ –£—Ä–æ–Ω: " + str(ff["hdamage"]) + " (+" + str(ff["pdamage"]) + ")" + \
           "\nüï∂ –ó–∞—â–∏—Ç–∞: " + str(ff["hdef"]) + " (+" + str(ff["pdef"]) + ")" + \
           "\n" \
           "\nüîë –ò–º—É—â–µ—Å—Ç–≤–æ" \
           "\n&#12288;üíª –ö–æ–º–ø: " + ff["hcomp"] + \
           "\n&#12288;üõ° VPN: " + ff["hvpn"] + \
           "\n&#12288;üö™ –£–±–µ–∂–∏—â–µ: " + ff["hsheltr"] \

def darkshop():
    return "üé¥ DarkShop üé¥" \
           "\n" \
           "\n&#12288;üíª –ö–æ–º–ø—ã - –∞—Ç–∞–∫–∞" \
           "\n&#12288;üõ° VPN - –∑–∞—â–∏—Ç–∞" \
           "\n&#12288;üö™ –£–±–µ–∂–∏—â–∞ - —Ö–ø" \
           "\n" \
           "\nüìå –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –µ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ"

def comps():
    return "üíª –ö–æ–º–ø—ã üíª" \
           "\n–£—Ä–æ–≤–µ–Ω—å | –ù–∞–∑–≤–∞–Ω–∏–µ | –ë–∞—Ñ—Ñ—ã | –¶–µ–Ω–∞" \
           "\n" \
           "\n&#12288;üíé 1. &#12288;2 | –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä | +1 –∫ –∞—Ç–∞–∫–µ | 20‚Çø" \
           "\n&#12288;üíé 2. &#12288;5 | 4 —è–¥—Ä–∞, 4 –≥–∏–≥–∞ | +3 –∫ –∞—Ç–∞–∫–µ | 100‚Çø" \
           "\n&#12288;üíé 3. &#12288;15 | –û—Ñ–∏—Å–Ω—ã–π | +5 –∫ –∞—Ç–∞–∫–µ | 300‚Çø" \
           "\n&#12288;üíé 4. &#12288;30 | –ò–≥—Ä–æ–≤–æ–π | +10 –∫ –∞—Ç–∞–∫–µ | 500‚Çø" \
           "\n&#12288;üíé 5. &#12288;50 | –ö–≤–∞–Ω—Ç–æ–≤—ã–π | +20 –∫ –∞—Ç–∞–∫–µ | 1500‚Çø" \
           "\n" \
           "\nüìå –î–ª—è –ø–æ–∫—É–ø–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ '–∫–∫–æ–º–ø [–Ω–æ–º–µ—Ä]'"

def vpns():
    return "üõ° VPN üõ°" \
           "\n–£—Ä–æ–≤–µ–Ω—å | –ù–∞–∑–≤–∞–Ω–∏–µ | –ë–∞—Ñ—Ñ—ã | –¶–µ–Ω–∞" \
           "\n" \
           "\n&#12288;üíé 1. &#12288;3 | Wi-Fi —Å–æ—Å–µ–¥–∞ | +1 –∫ –∑–∞—â–∏—Ç–µ | 20‚Çø" \
           "\n&#12288;üíé 2. &#12288;7 | –° —Ñ–æ—Ä—É–º–∞ | +4 –∫ –∑–∞—â–∏—Ç–µ | 170‚Çø" \
           "\n&#12288;üíé 3. &#12288;18 | –ü—Ä–∏–≤–∞—Ç–Ω—ã–π | +8 –∫ –∑–∞—â–∏—Ç–µ | 350‚Çø" \
           "\n&#12288;üíé 4. &#12288;35 | –ò–≥—Ä–æ–≤–æ–π | +15 –∫ –∑–∞—â–∏—Ç–µ | 550‚Çø" \
           "\n&#12288;üíé 5. &#12288;55 | –°–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π | +20 –∫ –∑–∞—â–∏—Ç–µ | 1700‚Çø" \
           "\n" \
           "\nüìå –î–ª—è –ø–æ–∫—É–ø–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ '–∫–≤–ø–Ω [–Ω–æ–º–µ—Ä]'"

def shltrs():
    return "üö™ –£–±–µ–∂–∏—â–∞ üö™" \
           "\n–£—Ä–æ–≤–µ–Ω—å | –ù–∞–∑–≤–∞–Ω–∏–µ | –ë–∞—Ñ—Ñ—ã | –¶–µ–Ω–∞" \
           "\n" \
           "\n&#12288;üíé 1. &#12288;5 | –ü–æ–¥–≤–∞–ª –¥–æ–º–∞ | +2 –∫ —Ö–ø | 35‚Çø" \
           "\n&#12288;üíé 2. &#12288;12 | –ì–∞—Ä–∞–∂ –¥–µ–¥–∞ | +5 –∫ —Ö–ø | 200‚Çø" \
           "\n&#12288;üíé 3. &#12288;25 | –°—ä–µ–º–Ω–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞ | +9 –∫ —Ö–ø | 400‚Çø" \
           "\n&#12288;üíé 4. &#12288;50 | –ë—É–Ω–∫–µ—Ä –≤ –≥–æ—Ä–∞—Ö | +16 –∫ —Ö–ø | 1800‚Çø" \
           "\n&#12288;üíé 5. &#12288;60 | –î–æ–º –ü—É—Ç–∏–Ω–∞ | +21 –∫ —Ö–ø | 2000‚Çø" \
           "\n" \
           "\nüìå –î–ª—è –ø–æ–∫—É–ø–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ '–∫—É–±–µ–∂–∏—â–µ [–Ω–æ–º–µ—Ä]'"

def bcomp(id, n):
    with open('json/' + str(id) + '.json') as f:
        ff = json.loads(f.read())
    if ff["hcomp"] == "":
        if n == '1' and ff["btc"] >= 20 and ff["hlevel"] >= 2:
            ff["btc"] -= 20
            ff["hcomp"] = "–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä"
            ff["pdamage"] += 1
            with open('json/' + str(id) + '.json', 'w') as f:
                f.write(json.dumps(ff, indent=4))
            congrts(id) # noqa
            return "–í—ã –∫—É–ø–∏–ª–∏ " + str(ff["hcomp"]) + " –∑–∞ 20‚Çø\n–í–∞—à –±–∞–ª–∞–Ω—Å: \n" + bal(id) # noqa

        elif n == '2' and ff["btc"] >= 100 and ff["hlevel"] >= 5:
            ff["btc"] -= 100
            ff["hcomp"] = "4 —è–¥—Ä–∞, 4 –≥–∏–≥–∞"
            ff["pdamage"] += 3
            with open('json/' + str(id) + '.json', 'w') as f:
                f.write(json.dumps(ff, indent=4))
            congrts(id) # noqa
            return "–í—ã –∫—É–ø–∏–ª–∏ " + str(ff["hcomp"]) + " –∑–∞ 100‚Çø\n–í–∞—à –±–∞–ª–∞–Ω—Å: \n" + bal(id) # noqa

        elif n == '3' and ff["btc"] >= 300 and ff["hlevel"] >= 15:
            ff["btc"] -= 300
            ff["hcomp"] = "–û—Ñ–∏—Å–Ω—ã–π"
            ff["pdamage"] += 5
            with open('json/' + str(id) + '.json', 'w') as f:
                f.write(json.dumps(ff, indent=4))
            congrts(id) # noqa
            return "–í—ã –∫—É–ø–∏–ª–∏ " + str(ff["hcomp"]) + " –∑–∞ 300‚Çø\n–í–∞—à –±–∞–ª–∞–Ω—Å: \n" + bal(id) # noqa

        elif n == '4' and ff["btc"] >= 500 and ff["hlevel"] >= 30:
            ff["btc"] -= 500
            ff["hcomp"] = "–ò–≥—Ä–æ–≤–æ–π"
            ff["pdamage"] += 10
            with open('json/' + str(id) + '.json', 'w') as f:
                f.write(json.dumps(ff, indent=4))
            congrts(id) # noqa
            return "–í—ã –∫—É–ø–∏–ª–∏ " + str(ff["hcomp"]) + " –∑–∞ 500‚Çø\n–í–∞—à –±–∞–ª–∞–Ω—Å: \n" + bal(id) # noqa

        elif n == '5' and ff["btc"] >= 1500 and ff["hlevel"] >= 50:
            ff["btc"] -= 1500
            ff["hcomp"] = "–ö–≤–∞–Ω—Ç–æ–≤—ã–π"
            ff["pdamage"] += 20
            with open('json/' + str(id) + '.json', 'w') as f:
                f.write(json.dumps(ff, indent=4))
            congrts(id) # noqa
            return "–í—ã –∫—É–ø–∏–ª–∏ " + str(ff["hcomp"]) + " –∑–∞ 1500‚Çø\n–í–∞—à –±–∞–ª–∞–Ω—Å: \n" + bal(id) # noqa

        else:
            return "–£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –¥–µ–Ω–µ–≥/–æ–ø—ã—Ç–∞ –∏–ª–∏ –≤—ã –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –∫–æ–º–∞–Ω–¥—É!\n–ü—Ä–∏–º–µ—Ä: –∫–∫–æ–º–ø 1"
    else:
        return "–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∫–æ–º–ø –∏–ª–∏ –≤—ã –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –∫–æ–º–∞–Ω–¥—É!\n–ü—Ä–∏–º–µ—Ä: –∫–∫–æ–º–ø 1\n–ß—Ç–æ–±—ã –ø—Ä–æ–¥–∞—Ç—å –µ–≥–æ, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ '–ø–∫–æ–º–ø'"

def scomps(id):
    with open('json/' + str(id) + '.json') as f:
        ff = json.loads(f.read())
    if ff["hcomp"] != "":
        if ff["hcomp"] == "–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä":
            temp = ff["hcomp"]
            ff["hcomp"] = ""
            ff["btc"] += 20
            ff["pdamage"] = 0
            with open('json/' + str(id) + '.json', 'w') as f:
                f.write(json.dumps(ff, indent=4))
            return "–í—ã –ø—Ä–æ–¥–∞–ª–∏ " + temp + " –∑–∞ 20‚Çø\n" + bal(id) # noqa

        elif ff["hcomp"] == "4 —è–¥—Ä–∞, 4 –≥–∏–≥–∞":
            temp = ff["hcomp"]
            ff["hcomp"] = ""
            ff["btc"] += 100
            ff["pdamage"] = 0
            with open('json/' + str(id) + '.json', 'w') as f:
                f.write(json.dumps(ff, indent=4))
            return "–í—ã –ø—Ä–æ–¥–∞–ª–∏ " + temp + " –∑–∞ 100‚Çø\n" + bal(id) # noqa

        elif ff["hcomp"] == "–û—Ñ–∏—Å–Ω—ã–π":
            temp = ff["hcomp"]
            ff["hcomp"] = ""
            ff["btc"] += 300
            ff["pdamage"] = 0
            with open('json/' + str(id) + '.json', 'w') as f:
                f.write(json.dumps(ff, indent=4))
            return "–í—ã –ø—Ä–æ–¥–∞–ª–∏ " + temp + " –∑–∞ 300‚Çø\n" + bal(id) # noqa

        elif ff["hcomp"] == "–ò–≥—Ä–æ–≤–æ–π":
            temp = ff["hcomp"]
            ff["hcomp"] = ""
            ff["btc"] += 500
            ff["pdamage"] = 0
            with open('json/' + str(id) + '.json', 'w') as f:
                f.write(json.dumps(ff, indent=4))
            return "–í—ã –ø—Ä–æ–¥–∞–ª–∏ " + temp + " –∑–∞ 500‚Çø\n" + bal(id) # noqa

        elif ff["hcomp"] == "–ö–≤–∞–Ω—Ç–æ–≤—ã–π":
            temp = ff["hcomp"]
            ff["hcomp"] = ""
            ff["btc"] += 1500
            ff["pdamage"] = 0
            with open('json/' + str(id) + '.json', 'w') as f:
                f.write(json.dumps(ff, indent=4))
            return "–í—ã –ø—Ä–æ–¥–∞–ª–∏ " + temp + " –∑–∞ 1500‚Çø\n" + bal(id) # noqa
    else:
        return '–£ –≤–∞—Å –Ω–µ—Ç –∫–æ–º–ø–∞!'

def bvpn(id, n):
    with open('json/' + str(id) + '.json') as f:
        ff = json.loads(f.read())
    if ff["hvpn"] == "":
        if n == '1' and ff["btc"] >= 20 and ff["hlevel"] >= 3:
            ff["btc"] -= 20
            ff["hvpn"] = "Wi-Fi —Å–æ—Å–µ–¥–∞"
            ff["pdef"] += 1
            with open('json/' + str(id) + '.json', 'w') as f:
                f.write(json.dumps(ff, indent=4))
            congrts(id) # noqa
            return "–í—ã –∫—É–ø–∏–ª–∏ " + str(ff["hvpn"]) + " –∑–∞ 20‚Çø\n–í–∞—à –±–∞–ª–∞–Ω—Å: \n" + bal(id) # noqa

        elif n == '2' and ff["btc"] >= 170 and ff["hlevel"] >= 7:
            ff["btc"] -= 100
            ff["hvpn"] = "–° —Ñ–æ—Ä—É–º–∞"
            ff["pdef"] += 4
            with open('json/' + str(id) + '.json', 'w') as f:
                f.write(json.dumps(ff, indent=4))
            congrts(id) # noqa
            return "–í—ã –∫—É–ø–∏–ª–∏ " + str(ff["hvpn"]) + " –∑–∞ 100‚Çø\n–í–∞—à –±–∞–ª–∞–Ω—Å: \n" + bal(id) # noqa

        elif n == '3' and ff["btc"] >= 350 and ff["hlevel"] >= 18:
            ff["btc"] -= 300
            ff["hvpn"] = "–ü—Ä–∏–≤–∞—Ç–Ω—ã–π"
            ff["pdef"] += 8
            with open('json/' + str(id) + '.json', 'w') as f:
                f.write(json.dumps(ff, indent=4))
            congrts(id) # noqa
            return "–í—ã –∫—É–ø–∏–ª–∏ " + str(ff["hvpn"]) + " –∑–∞ 300‚Çø\n–í–∞—à –±–∞–ª–∞–Ω—Å: \n" + bal(id) # noqa

        elif n == '4' and ff["btc"] >= 550 and ff["hlevel"] >= 35:
            ff["btc"] -= 500
            ff["hvpn"] = "–ò–≥—Ä–æ–≤–æ–π"
            ff["pdef"] += 15
            with open('json/' + str(id) + '.json', 'w') as f:
                f.write(json.dumps(ff, indent=4))
            congrts(id) # noqa
            return "–í—ã –∫—É–ø–∏–ª–∏ " + str(ff["hvpn"]) + " –∑–∞ 500‚Çø\n–í–∞—à –±–∞–ª–∞–Ω—Å: \n" + bal(id) # noqa

        elif n == '5' and ff["btc"] >= 1700 and ff["hlevel"] >= 55:
            ff["btc"] -= 1500
            ff["hvpn"] = "–°–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π"
            ff["pdef"] += 20
            with open('json/' + str(id) + '.json', 'w') as f:
                f.write(json.dumps(ff, indent=4))
            congrts(id) # noqa
            return "–í—ã –∫—É–ø–∏–ª–∏ " + str(ff["hvpn"]) + " –∑–∞ 1500‚Çø\n–í–∞—à –±–∞–ª–∞–Ω—Å: \n" + bal(id) # noqa

        else:
            return "–£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –¥–µ–Ω–µ–≥/–æ–ø—ã—Ç–∞ –∏–ª–∏ –≤—ã –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –∫–æ–º–∞–Ω–¥—É!\n–ü—Ä–∏–º–µ—Ä: –∫–≤–ø–Ω 1"
    else:
        return "–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å VPN –∏–ª–∏ –≤—ã –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –∫–æ–º–∞–Ω–¥—É!\n–ü—Ä–∏–º–µ—Ä: –∫–≤–ø–Ω 1\n–ß—Ç–æ–±—ã –ø—Ä–æ–¥–∞—Ç—å –µ–≥–æ, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ '–ø–≤–ø–Ω'"

def svpn(id):
    with open('json/' + str(id) + '.json') as f:
        ff = json.loads(f.read())
    if ff["hvpn"] != "":
        if ff["hvpn"] == "Wi-Fi —Å–æ—Å–µ–¥–∞":
            temp = ff["hvpn"]
            ff["hvpn"] = ""
            ff["btc"] += 20
            ff["pdef"] = 0
            with open('json/' + str(id) + '.json', 'w') as f:
                f.write(json.dumps(ff, indent=4))
            return "–í—ã –ø—Ä–æ–¥–∞–ª–∏ " + temp + " –∑–∞ 20‚Çø\n" + bal(id) # noqa

        elif ff["hvpn"] == "–° —Ñ–æ—Ä—É–º–∞":
            temp = ff["hvpn"]
            ff["hvpn"] = ""
            ff["btc"] += 170
            ff["pdef"] = 0
            with open('json/' + str(id) + '.json', 'w') as f:
                f.write(json.dumps(ff, indent=4))
            return "–í—ã –ø—Ä–æ–¥–∞–ª–∏ " + temp + " –∑–∞ 170‚Çø\n" + bal(id) # noqa

        elif ff["hvpn"] == "–ü—Ä–∏–≤–∞—Ç–Ω—ã–π":
            temp = ff["hvpn"]
            ff["hvpn"] = ""
            ff["btc"] += 350
            ff["pdef"] = 0
            with open('json/' + str(id) + '.json', 'w') as f:
                f.write(json.dumps(ff, indent=4))
            return "–í—ã –ø—Ä–æ–¥–∞–ª–∏ " + temp + " –∑–∞ 350‚Çø\n" + bal(id) # noqa

        elif ff["hvpn"] == "–ò–≥—Ä–æ–≤–æ–π":
            temp = ff["hvpn"]
            ff["hvpn"] = ""
            ff["btc"] += 550
            ff["pdef"] = 0
            with open('json/' + str(id) + '.json', 'w') as f:
                f.write(json.dumps(ff, indent=4))
            return "–í—ã –ø—Ä–æ–¥–∞–ª–∏ " + temp + " –∑–∞ 550‚Çø\n" + bal(id) # noqa

        elif ff["hvpn"] == "–°–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π":
            temp = ff["hvpn"]
            ff["hvpn"] = ""
            ff["btc"] += 1700
            ff["pdef"] = 0
            with open('json/' + str(id) + '.json', 'w') as f:
                f.write(json.dumps(ff, indent=4))
            return "–í—ã –ø—Ä–æ–¥–∞–ª–∏ " + temp + " –∑–∞ 1700‚Çø\n" + bal(id) # noqa
    else:
        return '–£ –≤–∞—Å –Ω–µ—Ç VPN!'

def bshltr(id, n):
    with open('json/' + str(id) + '.json') as f:
        ff = json.loads(f.read())
    if ff["hsheltr"] == "":
        if n == '1' and ff["btc"] >= 35 and ff["hlevel"] >= 5:
            ff["btc"] -= 35
            ff["hsheltr"] = "–ü–æ–¥–≤–∞–ª –¥–æ–º–∞"
            ff["php"] += 1
            with open('json/' + str(id) + '.json', 'w') as f:
                f.write(json.dumps(ff, indent=4))
            congrts(id) # noqa
            return "–í—ã –∫—É–ø–∏–ª–∏ " + str(ff["hsheltr"]) + " –∑–∞ 35‚Çø\n–í–∞—à –±–∞–ª–∞–Ω—Å: \n" + bal(id) # noqa

        elif n == '2' and ff["btc"] >= 200 and ff["hlevel"] >= 12:
            ff["btc"] -= 200
            ff["hsheltr"] = "–ì–∞—Ä–∞–∂ –¥–µ–¥–∞"
            ff["php"] += 5
            with open('json/' + str(id) + '.json', 'w') as f:
                f.write(json.dumps(ff, indent=4))
            congrts(id) # noqa
            return "–í—ã –∫—É–ø–∏–ª–∏ " + str(ff["hsheltr"]) + " –∑–∞ 200‚Çø\n–í–∞—à –±–∞–ª–∞–Ω—Å: \n" + bal(id) # noqa

        elif n == '3' and ff["btc"] >= 400 and ff["hlevel"] >= 25:
            ff["btc"] -= 400
            ff["hsheltr"] = "–°—ä–µ–º–Ω–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞"
            ff["php"] += 9
            with open('json/' + str(id) + '.json', 'w') as f:
                f.write(json.dumps(ff, indent=4))
            congrts(id) # noqa
            return "–í—ã –∫—É–ø–∏–ª–∏ " + str(ff["hsheltr"]) + " –∑–∞ 400‚Çø\n–í–∞—à –±–∞–ª–∞–Ω—Å: \n" + bal(id) # noqa

        elif n == '4' and ff["btc"] >= 1800 and ff["hlevel"] >= 50:
            ff["btc"] -= 1800
            ff["hsheltr"] = "–ë—É–Ω–∫–µ—Ä –≤ –≥–æ—Ä–∞—Ö"
            ff["php"] += 16
            with open('json/' + str(id) + '.json', 'w') as f:
                f.write(json.dumps(ff, indent=4))
            congrts(id) # noqa
            return "–í—ã –∫—É–ø–∏–ª–∏ " + str(ff["hsheltr"]) + " –∑–∞ 1800‚Çø\n–í–∞—à –±–∞–ª–∞–Ω—Å: \n" + bal(id) # noqa

        elif n == '5' and ff["btc"] >= 2000 and ff["hlevel"] >= 60:
            ff["btc"] -= 2000
            ff["hsheltr"] = "–î–æ–º –ü—É—Ç–∏–Ω–∞"
            ff["php"] += 21
            with open('json/' + str(id) + '.json', 'w') as f:
                f.write(json.dumps(ff, indent=4))
            congrts(id) # noqa
            return "–í—ã –∫—É–ø–∏–ª–∏ " + str(ff["hsheltr"]) + " –∑–∞ 2000‚Çø\n–í–∞—à –±–∞–ª–∞–Ω—Å: \n" + bal(id) # noqa

        else:
            return "–£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –¥–µ–Ω–µ–≥/–æ–ø—ã—Ç–∞ –∏–ª–∏ –≤—ã –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –∫–æ–º–∞–Ω–¥—É!\n–ü—Ä–∏–º–µ—Ä: –∫—É–±–µ–∂–∏—â–µ 1"
    else:
        return "–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å —É–±–µ–∂–∏—â–µ –∏–ª–∏ –≤—ã –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –∫–æ–º–∞–Ω–¥—É!\n–ü—Ä–∏–º–µ—Ä: –∫—É–±–µ–∂–∏—â–µ 1\n–ß—Ç–æ–±—ã –ø—Ä–æ–¥–∞—Ç—å –µ–≥–æ, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ '–ø—É–±–µ–∂–∏—â–µ'"

def sshltr(id):
    with open('json/' + str(id) + '.json') as f:
        ff = json.loads(f.read())
    if ff["hsheltr"] != "":
        if ff["hsheltr"] == "–ü–æ–¥–≤–∞–ª –¥–æ–º–∞":
            temp = ff["hsheltr"]
            ff["hsheltr"] = ""
            ff["btc"] += 35
            ff["php"] = 0
            with open('json/' + str(id) + '.json', 'w') as f:
                f.write(json.dumps(ff, indent=4))
            return "–í—ã –ø—Ä–æ–¥–∞–ª–∏ " + temp + " –∑–∞ 35‚Çø\n" + bal(id) # noqa

        elif ff["hsheltr"] == "–ì–∞—Ä–∞–∂ –¥–µ–¥–∞":
            temp = ff["hsheltr"]
            ff["hsheltr"] = ""
            ff["btc"] += 200
            ff["php"] = 0
            with open('json/' + str(id) + '.json', 'w') as f:
                f.write(json.dumps(ff, indent=4))
            return "–í—ã –ø—Ä–æ–¥–∞–ª–∏ " + temp + " –∑–∞ 200‚Çø\n" + bal(id) # noqa

        elif ff["hsheltr"] == "–°—ä–µ–º–Ω–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞":
            temp = ff["hsheltr"]
            ff["hsheltr"] = ""
            ff["btc"] += 400
            ff["php"] = 0
            with open('json/' + str(id) + '.json', 'w') as f:
                f.write(json.dumps(ff, indent=4))
            return "–í—ã –ø—Ä–æ–¥–∞–ª–∏ " + temp + " –∑–∞ 400‚Çø\n" + bal(id) # noqa

        elif ff["hsheltr"] == "–ë—É–Ω–∫–µ—Ä –≤ –≥–æ—Ä–∞—Ö":
            temp = ff["hsheltr"]
            ff["hsheltr"] = ""
            ff["btc"] += 1800
            ff["php"] = 0
            with open('json/' + str(id) + '.json', 'w') as f:
                f.write(json.dumps(ff, indent=4))
            return "–í—ã –ø—Ä–æ–¥–∞–ª–∏ " + temp + " –∑–∞ 1800‚Çø\n" + bal(id) # noqa

        elif ff["hsheltr"] == "–î–æ–º –ü—É—Ç–∏–Ω–∞":
            temp = ff["hsheltr"]
            ff["hsheltr"] = ""
            ff["btc"] += 2000
            ff["php"] = 0
            with open('json/' + str(id) + '.json', 'w') as f:
                f.write(json.dumps(ff, indent=4))
            return "–í—ã –ø—Ä–æ–¥–∞–ª–∏ " + temp + " –∑–∞ 2000‚Çø\n" + bal(id) # noqa
    else:
        return '–£ –≤–∞—Å –Ω–µ—Ç —É–±–µ–∂–∏—â–∞!'

def upl():
    return "–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–ª—É—á—à–∏—Ç—å" \
           "\n&#12288;üíä –•–ü" \
           "\n&#12288;üî´ –£—Ä–æ–Ω" \
           "\n&#12288;üï∂ –ó–∞—â–∏—Ç–∞" \
           "\n" \
           "\nüìå –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –µ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ"

def hpup(id):
    with open('json/' + str(id) + '.json') as f:
        ff = json.loads(f.read())
    return "üîé –í–∞—à —É—Ä–æ–≤–µ–Ω—å: " + str(ff["hlevel"]) + \
           "\nüíä –•–ü: " + str(ff["hhp"]) + \
           "\n" \
           "\n‚ôª –£—Ä–æ–≤–µ–Ω—å –ø—Ä–æ–∫–∞—á–∫–∏: " + str(ff["hplvl"]) + \
           "\nüí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–æ–∫–∞—á–∫–∏: " + str(ff["hplvl"] * 10) + "‚Çø" + \
           "\n" \
           "\nüìå –î–ª—è –ø—Ä–æ–∫–∞—á–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ - –ü—Ö–ø"

def defup(id):
    with open('json/' + str(id) + '.json') as f:
        ff = json.loads(f.read())

    return "üîé –í–∞—à —É—Ä–æ–≤–µ–Ω—å: " + str(ff["hlevel"]) + \
           "\nüï∂ –ó–∞—â–∏—Ç–∞: " + str(ff["hdef"]) + \
           "\n" \
           "\n‚ôª –£—Ä–æ–≤–µ–Ω—å –ø—Ä–æ–∫–∞—á–∫–∏: " + str(ff["deflvl"]) + \
           "\nüí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–æ–∫–∞—á–∫–∏: " + str(ff["deflvl"] * 10) + "‚Çø" + \
           "\n" \
           "\nüìå –î–ª—è –ø—Ä–æ–∫–∞—á–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ - –ü–¥–µ—Ñ"

def dmgup(id):
    with open('json/' + str(id) + '.json') as f:
        ff = json.loads(f.read())

    return "üîé –í–∞—à —É—Ä–æ–≤–µ–Ω—å: " + str(ff["hlevel"]) + \
           "\nüî´ –£—Ä–æ–Ω: " + str(ff["hdamage"]) + \
           "\n" \
           "\n‚ôª –£—Ä–æ–≤–µ–Ω—å –ø—Ä–æ–∫–∞—á–∫–∏: " + str(ff["damagelvl"]) + \
           "\nüí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–æ–∫–∞—á–∫–∏: " + str(ff["damagelvl"] * 10) + "‚Çø" + \
           "\n" \
           "\nüìå –î–ª—è –ø—Ä–æ–∫–∞—á–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ - –ü—É—Ä–æ–Ω"

def php(id,val):
    with open('json/' + str(id) + '.json') as f:
        ff = json.loads(f.read())

    if val == "":
        value = 1
    else:
        value = int(val)

    p = ff["hplvl"] ** 3
    if ff["hplvl"] <= 100 and ff["hplvl"] + value <= 100:
        if ff["btc"] >= p * value:
            ff["btc"] -= p * value
            ff["hplvl"] += value
            ff["hhp"] += 10 * value
            with open('json/' + str(id) + '.json', 'w') as f:
                f.write(json.dumps(ff, indent=4))
            return "‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–∫–∞—á–∞–ª–∏ –•–ü –Ω–∞ " + str(value) + " —É—Ä–æ–≤–µ–Ω—å!\nüíä –•–ü: " + str(ff["hhp"]) + "\n" + "‚ôª –£—Ä–æ–≤–µ–Ω—å –•–ü: " + str(ff["hplvl"]) + "\n\nüí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å —Å–ª–µ–¥—É—é—â–µ–π –ø—Ä–æ–∫–∞—á–∫–∏: " + str(p) + "‚Çø"
        else:
            return "–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±–∏—Ç–∫–æ–∏–Ω–æ–≤ –¥–ª—è –ø—Ä–æ–∫–∞—á–∫–∏!"
    else:
        return "–£ –≤–∞—Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å - 100!"

def pdef(id,val):
    with open('json/' + str(id) + '.json') as f:
        ff = json.loads(f.read())

    if val == "":
        value = 1
    else:
        value = int(val)

    p = ff["deflvl"] ** 3
    if ff["deflvl"] <= 100 and ff["deflvl"] + value <= 100:
        if ff["btc"] >= p * value:
            ff["btc"] -= p * value
            ff["deflvl"] += value
            ff["hdef"] += 10 * value
            with open('json/' + str(id) + '.json', 'w') as f:
                f.write(json.dumps(ff, indent=4))
            return "‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–∫–∞—á–∞–ª–∏ –ó–∞—â–∏—Ç—É –Ω–∞ " + str(value) + " —É—Ä–æ–≤–µ–Ω—å!\nüíä –•–ü: " + str(ff["hdef"]) + "\n" + "‚ôª –£—Ä–æ–≤–µ–Ω—å –ó–∞—â–∏—Ç—ã: " + str(ff["deflvl"]) + "\n\nüí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å —Å–ª–µ–¥—É—é—â–µ–π –ø—Ä–æ–∫–∞—á–∫–∏: " + str(p) + "‚Çø"
        else:
            return "–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±–∏—Ç–∫–æ–∏–Ω–æ–≤ –¥–ª—è –ø—Ä–æ–∫–∞—á–∫–∏!"
    else:
        return "–£ –≤–∞—Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å - 100!"

def pdmg(id,val):
    with open('json/' + str(id) + '.json') as f:
        ff = json.loads(f.read())

    if val == "":
        value = 1
    else:
        value = int(val)

    p = ff["damagelvl"] ** 3
    if ff["damagelvl"] <= 100 and ff["damagelvl"] + value <= 100:
        if ff["btc"] >= p * value:
            ff["btc"] -= p * value
            ff["damagelvl"] += value
            ff["hdamage"] += 10 * value
            with open('json/' + str(id) + '.json', 'w') as f:
                f.write(json.dumps(ff, indent=4))
            return "‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–∫–∞—á–∞–ª–∏ –•–ü –Ω–∞ " + str(value) + " —É—Ä–æ–≤–µ–Ω—å!\nüíä –•–ü: " + str(ff["hdamage"]) + "\n" + "‚ôª –£—Ä–æ–≤–µ–Ω—å –•–ü: " + str(ff["damagelvl"]) + "\n\nüí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å —Å–ª–µ–¥—É—é—â–µ–π –ø—Ä–æ–∫–∞—á–∫–∏: " + str(p) + "‚Çø"
        else:
            return "–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±–∏—Ç–∫–æ–∏–Ω–æ–≤ –¥–ª—è –ø—Ä–æ–∫–∞—á–∫–∏!"
    else:
        return "–£ –≤–∞—Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å - 100!"


